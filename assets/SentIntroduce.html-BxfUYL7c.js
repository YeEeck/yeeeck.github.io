import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as o,h as e,f as t,o as s}from"./app-BgxMBWNc.js";const r="/assets/SENT_SchematicDiagram-CTUGQlu5.png",i="/assets/SENT_VoltLevel-BXnfoXw-.png",l="/assets/SENT_TimeLogic-n4_pRdnB.png",c="/assets/SENT_FrameStru-DY8IvmPQ.png",h="/assets/SENT_FrameStruLevel-BrCuEbvf.png",f="/assets/SENT_ShortSerialMessage-BYYfBbmb.png",T="/assets/SENT_EnhancedSerialMessage-ByL6Kj_E.png",p="/assets/SENT_SerialDataTypeA-VXsK15Qh.png",d="/assets/SENT_SerialDataTypeB-DqAdCLO5.png",m={},Q={class:"MathJax",jax:"SVG",display:"true",style:{position:"relative"}},b={style:{"vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"16.274ex",height:"2.203ex",role:"img",focusable:"false",viewBox:"0 -891.7 7193 973.7","aria-hidden":"true"};function S(u,a){return s(),o("div",null,[a[2]||(a[2]=e('<h1 id="sent协议指导手册" tabindex="-1"><a class="header-anchor" href="#sent协议指导手册"><span>SENT协议指导手册</span></a></h1><h2 id="文档概述" tabindex="-1"><a class="header-anchor" href="#文档概述"><span>文档概述</span></a></h2><p>本文为SENT协议的相关协议信息的收集整理汇总，意图让读者通过本文能够较为详尽的了解SENT协议并进行相关的开发与测试。</p><h2 id="sent协议概述" tabindex="-1"><a class="header-anchor" href="#sent协议概述"><span>SENT协议概述</span></a></h2><h3 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h3><p>SENT 全称Single Edge Nibble Transmission，中文名称为“单边半字传输协议”，是SAE推出的一种点对点的、单向传输的方案，被用于车载传感器和电子控制单元（ECU）之间的数据传输。</p><h3 id="协议特点" tabindex="-1"><a class="header-anchor" href="#协议特点"><span>协议特点</span></a></h3><ol><li>单线传输</li><li>电平信号</li><li>数据单向从传感器到ECU</li><li>数据包为“帧”，每帧由多个半字节数据组成，称为“Nibble”。</li><li>数据的传输可以分为快速通道和慢速通道，重要的信号用快速通道以实现高频率的更新，比如压力等，对于非关键的信号，如诊断等可以放在慢速通道传输；快速通道是每一帧传输一个完整的信号，慢速通道需要使用多帧传输一个完整的信号，即更新频率不同<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>；</li><li>发送数据的时间由传感器的时钟决定；</li></ol><h2 id="sent协议物理层" tabindex="-1"><a class="header-anchor" href="#sent协议物理层"><span>SENT协议物理层</span></a></h2><h3 id="原理图" tabindex="-1"><a class="header-anchor" href="#原理图"><span>原理图</span></a></h3><p>SENT传感器与ECU的基本线路连接如下图。<br><img src="'+r+'" alt="SENT原理图" loading="lazy"></p><h3 id="信号电平" tabindex="-1"><a class="header-anchor" href="#信号电平"><span>信号电平</span></a></h3><p>如图所示，0-0.5V为逻辑电平0，4.1-5V为逻辑电平1<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup>。信号使用单总线传输。<br><img src="'+i+'" alt="SENT信号电平" loading="lazy"></p><h2 id="sent信号帧解析-数据链路层" tabindex="-1"><a class="header-anchor" href="#sent信号帧解析-数据链路层"><span>SENT信号帧解析（数据链路层）</span></a></h2><h3 id="概述-1" tabindex="-1"><a class="header-anchor" href="#概述-1"><span>概述</span></a></h3><p>SENT信号通过两个下降沿周期之间的一系列脉冲序列来传输，SENT报文以一个同步脉冲开始，该脉冲与后续的下降沿之间的时间间隔等效于56个时钟节拍；同步脉冲之后，状态/通信半字节按照SENT格式传送；随后紧接着就是6个含有传感器数据的Data Nibbles，数据通过4个数据位为一个单元来传输，或称“半字节”（一个半字节即一个Nibble）；在每条报文的尾部会提供一个检验脉冲并插入一个固定长度不超过1ms的暂停脉冲，因此SENT报文的长度会随着半字节的值而有不同<sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup>。</p><h3 id="nibble解析" tabindex="-1"><a class="header-anchor" href="#nibble解析"><span>Nibble解析</span></a></h3><p>SENT协议的数据使用半个字节Nibble，即4bit来进行编码定义的，单个半字节Nibble是通过2个下降沿之间的时间差来定义的。如下是一个Nibble的电压逻辑信号。<br><img src="'+l+'" alt="SENT时序逻辑图" loading="lazy"><br> 时间精度以1个节拍Tick来定义（一般1个Tick的时间是3~10us），每一个Nibble从一个下降沿开始，并且之后在逻辑0状态至少维持4Ticks，之后下一个下降沿距离第一个下降沿的时间差作为Nibble值的编码依据。需要注意的是，后一个下降沿距离第一个下降沿至少相隔12Ticks，至多27Ticks，且相隔Tick数减去12即为最终的Nibble值，如此Nibble值最小为0，最大为15（27Tick-12Tick），二进制表示时即为4bit<sup class="footnote-ref"><a href="#footnote2">[2:1]</a><a class="footnote-anchor" id="footnote-ref2:1"></a></sup>。</p><h3 id="sent基本帧结构" tabindex="-1"><a class="header-anchor" href="#sent基本帧结构"><span>SENT基本帧结构</span></a></h3><p><img src="'+c+'" alt="SENT基本帧结构" loading="lazy"><br><img src="'+h+'" alt="SENT基本帧结构电平" loading="lazy"><br> 基本组成<sup class="footnote-ref"><a href="#footnote2">[2:2]</a><a class="footnote-anchor" id="footnote-ref2:2"></a></sup>：</p><table><thead><tr><th>组成部分</th><th><div style="width:120px;">名称</div></th><th>解释</th></tr></thead><tbody><tr><td>Sync</td><td>标定/同步脉冲</td><td>固定的56Ticks，不是按照标准的SENT数据格式发送，该脉冲与后续的下降沿之间的时间间隔等效于56个时钟节拍。</td></tr><tr><td>Status/Com</td><td>状态及通讯字段</td><td>12-27Ticks，即1个Nibble（4bit）</td></tr><tr><td>Data</td><td>数据段</td><td>12-162Ticks，即1-6个Nibble</td></tr><tr><td>Pause</td><td>暂停脉冲</td><td>12-768Ticks，早期的SENT协议无此字段或者一个固定长度Ticks，SENT2010之后，部分通过此功能可以动态调节TICKS的个数，实现整个SENT协议是同一个固定长度TICKS</td></tr></tbody></table><h3 id="一个例子" tabindex="-1"><a class="header-anchor" href="#一个例子"><span>一个例子</span></a></h3><p>举个例子，将SENT协议通信抽象为用手电筒传递信息，则通信过程如下。<br> 首先约定：A每次点亮手电筒时，B按下秒表计时，A将信息藏于时间。B根据“密码本”对照看每次点灯时间长度来查找对应字母。于是，A不停的亮灯，灭灯，亮灯灭灯。B根据A亮灭灯来掐表，对照密码本看是什么字母。由于AB手里的秒表时基不同，彼此时间并不同步。为了解决这个问题，AB又约定：A每次发送信息，都会持续点亮56秒，然后A再发送数据。这56秒是给B对表用的。<br> 于是，B接收到A的56秒数据时，都会同步自己的秒表，这样就能确保A的时间刻度和B时间刻度保持一致，查密码本时就不会出错。<br> 但手电筒传递过程中，偶尔出现恶劣情况或有飞沙掠影，B可能看到A的灯光“虚闪”，这样的话，B掐表就会出现紊乱。<br> 为了解决这个问题，AB约定：A每次发送完信息后，再发送一个验证码，验证码是由前面的信息反算得来。即A每次发送的信息都会有一套加密算法得到一组验证码，A再将验证码发送出去。B接收到信息后，也会接收到验证码，同时B根据相同算法将接收的数据转换得到一组验证码，将计算得到的验证码和接收到的验证码比较，一致说明信息正确，不同则丢弃数据。<br> 简单总结就是：对表、计时和验证，这也就是SENT协议传输的全过程<sup class="footnote-ref"><a href="#footnote4">[4]</a><a class="footnote-anchor" id="footnote-ref4"></a></sup>。</p><h3 id="sent的tick时间定义与sync机制" tabindex="-1"><a class="header-anchor" href="#sent的tick时间定义与sync机制"><span>SENT的Tick时间定义与Sync机制</span></a></h3><p>如上文所示，SENT的Tick长度可以在3~10us之间。那如何确定Tick长度呢？如果一个帧内的Tick长度不同，显然会导致解析错误。因此，SENT协议在帧头部设置了Sync同步域，Sync包含1个下降沿，该下降沿到下一个下降沿（Status/Com）的间隔时间为56个Ticks的时间，以此对Tick时长进行标定<sup class="footnote-ref"><a href="#footnote5">[5]</a><a class="footnote-anchor" id="footnote-ref5"></a></sup>。<br> 假设一个Tick长度为5us，则Sync域的长度将为280us，也就是Sync的下降沿到Status/Com的下降沿之间的时间间隔为280us。</p><h3 id="status-com域" tabindex="-1"><a class="header-anchor" href="#status-com域"><span>Status/Com域</span></a></h3><p>Status/Com域仅包含一个Nibble，长度为4bit。该域的数据主要用于单个报文中多帧的组合控制，具体的定义与使用使用详见章节“SENT多帧报文（类同网络层）”。</p><h3 id="crc校验字段" tabindex="-1"><a class="header-anchor" href="#crc校验字段"><span>CRC校验字段</span></a></h3><p>该字段用于对数据进行CRC校验，长度为12~27Ticks，即一个Nibble。<br> CRC种子为5，生成多项式为<sup class="footnote-ref"><a href="#footnote6">[6]</a><a class="footnote-anchor" id="footnote-ref6"></a></sup>：</p>',29)),t("mjx-container",Q,[(s(),o("svg",b,a[0]||(a[0]=[e('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,413) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mo" transform="translate(1230.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(2231,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,413) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(3461.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(4462,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(5692.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(6693,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g>',1)]))),a[1]||(a[1]=t("mjx-assistive-mml",{unselectable:"on",display:"block"},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[t("msup",null,[t("mi",null,"x"),t("mn",null,"4")]),t("mo",null,"+"),t("msup",null,[t("mi",null,"x"),t("mn",null,"3")]),t("mo",null,"+"),t("msup",null,[t("mi",null,"x"),t("mn",null,"2")]),t("mo",null,"+"),t("mn",null,"1")])],-1))]),a[3]||(a[3]=e('<p>CRC表为：{0, 13, 7, 10, 14, 3, 9, 4, 1, 12, 6, 11, 15, 2, 8, 5}</p><h3 id="pause暂停脉冲" tabindex="-1"><a class="header-anchor" href="#pause暂停脉冲"><span>Pause暂停脉冲</span></a></h3><p>暂停脉冲为可选项，长度为12~768Ticks。早期的SENT协议无此字段或者一个固定长度Ticks，SENT2010之后，部分通过此功能可以动态调节TICKS的个数，实现整个SENT协议是同一个固定长度TICKS<sup class="footnote-ref"><a href="#footnote2">[2:3]</a><a class="footnote-anchor" id="footnote-ref2:3"></a></sup>。</p><h2 id="sent多帧报文" tabindex="-1"><a class="header-anchor" href="#sent多帧报文"><span>SENT多帧报文</span></a></h2><h3 id="概述-2" tabindex="-1"><a class="header-anchor" href="#概述-2"><span>概述</span></a></h3><p>SENT协议的高级功能是将多帧报文组合以实现更高复杂的通信功能，一般用于传输传感器的附加信号，比如温度，故障码和传感器类型信息等。SENT协议提供“Short Serial Message”（短消息）与“Enhanced Serial Message”（增强型消息）2种多帧组合报文功能<sup class="footnote-ref"><a href="#footnote2">[2:4]</a><a class="footnote-anchor" id="footnote-ref2:4"></a></sup>。</p><h3 id="short-serial-message" tabindex="-1"><a class="header-anchor" href="#short-serial-message"><span>Short Serial Message</span></a></h3><p><img src="'+f+'" alt="Short Serial Message" loading="lazy"><br> 当Status/Com字段的bit3值为1，其之后的15帧SENT报文的Status/Com字段的bit3值都为0时，即为此种情况，此情况下是16帧SENT报文组合来传输附加信息。<br> Status/Com字段的bit3值用来辨别以何种形式组合，而这16帧SENT报文的Status/Com字段的bit2值组合起来的16bit的值即为组合传输的信息，其由4-bit的Message ID，8-bit的Data和4-bit的CRC组成<sup class="footnote-ref"><a href="#footnote2">[2:5]</a><a class="footnote-anchor" id="footnote-ref2:5"></a></sup>。</p><h3 id="enhanced-serial-message" tabindex="-1"><a class="header-anchor" href="#enhanced-serial-message"><span>Enhanced Serial Message</span></a></h3><p><img src="'+T+'" alt="Enhanced Serial Message" loading="lazy"><br> 与上一种情况不同的是，此情况下使用18帧SENT报文组合来传输附加信息，起始标志是Status/Com字段bit3连续为1111110，并且要求Status/Com字段bit3组合的第13和第18位都为0。<br> 而数据域依然由18帧SENT报文的Status/Com字段的bit2值组合而成，但其数据组成又根据Status/Com字段bit3组合的第8位的不同分为2种情况<sup class="footnote-ref"><a href="#footnote2">[2:6]</a><a class="footnote-anchor" id="footnote-ref2:6"></a></sup>。</p><h3 id="status-com字段bit3组合的第8位为0" tabindex="-1"><a class="header-anchor" href="#status-com字段bit3组合的第8位为0"><span>Status/Com字段bit3组合的第8位为0</span></a></h3><p>Status/Com字段bit3组合的9~12bit和14~17bit分别作为8bit ID的高4位和低4位数据，而Status/Com字段bit2组合的1~6bit是6bit的CRC数据，之后的7~18bit则为要传输的12bit的数据<sup class="footnote-ref"><a href="#footnote2">[2:7]</a><a class="footnote-anchor" id="footnote-ref2:7"></a></sup>。<br><img src="'+p+'" alt="SENT_SerialDataTypeA" loading="lazy"></p><h3 id="status-com字段bit3组合的第8位为1" tabindex="-1"><a class="header-anchor" href="#status-com字段bit3组合的第8位为1"><span>Status/Com字段bit3组合的第8位为1</span></a></h3><p>Status/Com字段bit3组合的9~12bit为4bit ID，而Status/Com字段bit2组合的1~6bit是6bit的CRC数据，之后的7~18bit和bit3组合的14~17bit则组合为要传输的16bit的数据<sup class="footnote-ref"><a href="#footnote2">[2:8]</a><a class="footnote-anchor" id="footnote-ref2:8"></a></sup>。<br><img src="'+d+'" alt="SENT_SerialDataTypeB" loading="lazy"></p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/338810986" target="_blank" rel="noopener noreferrer">AUTOSAR MCAL系列之SENT信号传输 - 知乎 (zhihu.com)</a> <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><p><a href="https://blog.csdn.net/sinea2011/article/details/103927523" target="_blank" rel="noopener noreferrer">SENT协议_canoe搭建sent传感器工程-CSDN博客</a> <a href="#footnote-ref2" class="footnote-backref">↩︎</a> <a href="#footnote-ref2:1" class="footnote-backref">↩︎</a> <a href="#footnote-ref2:2" class="footnote-backref">↩︎</a> <a href="#footnote-ref2:3" class="footnote-backref">↩︎</a> <a href="#footnote-ref2:4" class="footnote-backref">↩︎</a> <a href="#footnote-ref2:5" class="footnote-backref">↩︎</a> <a href="#footnote-ref2:6" class="footnote-backref">↩︎</a> <a href="#footnote-ref2:7" class="footnote-backref">↩︎</a> <a href="#footnote-ref2:8" class="footnote-backref">↩︎</a></p></li><li id="footnote3" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/87250091" target="_blank" rel="noopener noreferrer">SENT信号介绍 - 知乎 (zhihu.com)</a> <a href="#footnote-ref3" class="footnote-backref">↩︎</a></p></li><li id="footnote4" class="footnote-item"><p><a href="https://www.autoee.cn/article/618.html" target="_blank" rel="noopener noreferrer">汽车通信总线（五）——SENT总线介绍 - 汽车电子技术 - AutoEE.cn</a> <a href="#footnote-ref4" class="footnote-backref">↩︎</a></p></li><li id="footnote5" class="footnote-item"><p><a href="https://www.zhihu.com/question/471560747/answer/2336679984" target="_blank" rel="noopener noreferrer">有没有大神懂 SENT通信协议解析的，用来做调试和上位机测试？ - 测控道的回答 - 知乎</a> <a href="#footnote-ref5" class="footnote-backref">↩︎</a></p></li><li id="footnote6" class="footnote-item"><p><a href="https://electronics.stackexchange.com/questions/284195/sent-crc-calculation" target="_blank" rel="noopener noreferrer">communication - SENT CRC calculation - Electrical Engineering Stack Exchange</a> <a href="#footnote-ref6" class="footnote-backref">↩︎</a></p></li></ol></section>',16))])}const N=n(m,[["render",S],["__file","SentIntroduce.html.vue"]]),k=JSON.parse(`{"path":"/posts/hardware/SentIntroduce.html","title":"SENT协议指导手册","lang":"zh-CN","frontmatter":{"date":"2024-02-29T00:00:00.000Z","category":["硬件","通信协议"],"tag":["SENT","协议手册"],"description":"SENT协议指导手册 文档概述 本文为SENT协议的相关协议信息的收集整理汇总，意图让读者通过本文能够较为详尽的了解SENT协议并进行相关的开发与测试。 SENT协议概述 概述 SENT 全称Single Edge Nibble Transmission，中文名称为“单边半字传输协议”，是SAE推出的一种点对点的、单向传输的方案，被用于车载传感器和电子...","head":[["meta",{"property":"og:url","content":"https://blog.yeck.xyz/posts/hardware/SentIntroduce.html"}],["meta",{"property":"og:site_name","content":"YeEeck's Blog"}],["meta",{"property":"og:title","content":"SENT协议指导手册"}],["meta",{"property":"og:description","content":"SENT协议指导手册 文档概述 本文为SENT协议的相关协议信息的收集整理汇总，意图让读者通过本文能够较为详尽的了解SENT协议并进行相关的开发与测试。 SENT协议概述 概述 SENT 全称Single Edge Nibble Transmission，中文名称为“单边半字传输协议”，是SAE推出的一种点对点的、单向传输的方案，被用于车载传感器和电子..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-27T03:15:44.000Z"}],["meta",{"property":"article:tag","content":"SENT"}],["meta",{"property":"article:tag","content":"协议手册"}],["meta",{"property":"article:published_time","content":"2024-02-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-27T03:15:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SENT协议指导手册\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-29T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-27T03:15:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"YeEeck\\",\\"url\\":\\"https:/blog.yeck.xyz\\"}]}"]]},"git":{"createdTime":1740625500000,"updatedTime":1740626144000,"contributors":[{"name":"yechenkai","username":"yechenkai","email":"yechenkai@wuruitech.com","commits":2,"url":"https://github.com/yechenkai"}]},"readingTime":{"minutes":8.04,"words":2411},"filePathRelative":"posts/hardware/SentIntroduce.md","localizedDate":"2024年2月29日","excerpt":"\\n<h2>文档概述</h2>\\n<p>本文为SENT协议的相关协议信息的收集整理汇总，意图让读者通过本文能够较为详尽的了解SENT协议并进行相关的开发与测试。</p>\\n<h2>SENT协议概述</h2>\\n<h3>概述</h3>\\n<p>SENT 全称Single Edge Nibble Transmission，中文名称为“单边半字传输协议”，是SAE推出的一种点对点的、单向传输的方案，被用于车载传感器和电子控制单元（ECU）之间的数据传输。</p>\\n<h3>协议特点</h3>\\n<ol>\\n<li>单线传输</li>\\n<li>电平信号</li>\\n<li>数据单向从传感器到ECU</li>\\n<li>数据包为“帧”，每帧由多个半字节数据组成，称为“Nibble”。</li>\\n<li>数据的传输可以分为快速通道和慢速通道，重要的信号用快速通道以实现高频率的更新，比如压力等，对于非关键的信号，如诊断等可以放在慢速通道传输；快速通道是每一帧传输一个完整的信号，慢速通道需要使用多帧传输一个完整的信号，即更新频率不同<sup class=\\"footnote-ref\\"><a href=\\"#footnote1\\">[1]</a><a class=\\"footnote-anchor\\" id=\\"footnote-ref1\\"></a></sup><a class=\\"footnote-anchor\\" id=\\"footnote-ref1\\">；</a></li><a class=\\"footnote-anchor\\" id=\\"footnote-ref1\\">\\n<li>发送数据的时间由传感器的时钟决定；</li>\\n</a></ol>","autoDesc":true}`);export{N as comp,k as data};
